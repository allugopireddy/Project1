#include <pthread.h>

#include <iostream>

#include <sys/types.h>

#include <Windows.h>

int shared_data[100];

 

void *fibonacci_thread(void* fun);

void parent(int* values);

 

 int main() {

 

            int values=0;

 

            pthread_t child;

            pthread_attr_t attr;

            pthread_attr_init(&attr);

 

            parent(&values);

            pthread_create(&child, &attr, fibonacci_thread, (void*) &values);

            pthread_join(child, NULL);

 

            for(int i = 0; i <= shared_data[i]; i++) {

                        printf("%d",shared_data[i]);

            }

 

            return 0;

 }

 

void *fibonacci_thread(void* fun) {

           

            int fib0 = 0, fib1 = 1, next = 0;

            int *pointer;

            pointer = (int*) fun;

            int total = *pointer;

           

            for (int i = 0 ; i < total; i++ ) {

      if ( i <= 1 )

         next = i;

      else {

         next = fib0 + fib1;

         fib0 = fib1;

         fib1 = next;

      }

              next = shared_data[i];

            }

            pthread_exit(0);

            return NULL;

}

 

void parent(int* values) {

            std::cout<<"Enter in a number to generate the Fibonacci sequence: ";

            std::cin>>*values;

 

            while(isdigit(*values) != true) {

                        std::cout<<"Invalid character, please enter in a values: ";

                        std::cin>>*values;

            }

 

            return;

}

    }         

